// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shared.Dtos;

#nullable disable

namespace Shared.Migrations
{
    [DbContext(typeof(ProyectoDbContext))]
    partial class ProyectoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Entidades.Administrador", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_ID");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.Property<int>("Cancha_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cancha_ID"));

                    b.Property<int>("Codigo_Deporte")
                        .HasColumnType("int");

                    b.Property<int?>("Deporte_ID")
                        .HasColumnType("int");

                    b.HasKey("Cancha_ID");

                    b.HasIndex("Deporte_ID");

                    b.ToTable("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Clientes", b =>
                {
                    b.Property<int>("Cliente_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cliente_ID"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("Cliente_ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Shared.Entidades.Consumiciones", b =>
                {
                    b.Property<int>("Consumicion_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consumicion_ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Cod_Producto")
                        .HasColumnType("int");

                    b.Property<bool>("Precio")
                        .HasColumnType("bit");

                    b.Property<int?>("Producto_ID")
                        .HasColumnType("int");

                    b.HasKey("Consumicion_ID");

                    b.HasIndex("Producto_ID");

                    b.ToTable("Consumiciones");
                });

            modelBuilder.Entity("Shared.Entidades.Deportes", b =>
                {
                    b.Property<int>("Deporte_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Deporte_ID"));

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Deporte_ID");

                    b.ToTable("Deportes");
                });

            modelBuilder.Entity("Shared.Entidades.Ejemplo", b =>
                {
                    b.Property<int>("Ejemplo_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ejemplo_ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ejemplo_ID");

                    b.ToTable("Ejemplo");
                });

            modelBuilder.Entity("Shared.Entidades.Elementos", b =>
                {
                    b.Property<int>("Elemento_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Elemento_ID"));

                    b.Property<int>("Cancha_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CanchasCancha_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Elemento_ID");

                    b.HasIndex("CanchasCancha_ID");

                    b.ToTable("Elementos");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.Property<int>("Producto_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Producto_ID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proveedor_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedoresProveedor_ID")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Producto_ID");

                    b.HasIndex("ProveedoresProveedor_ID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Shared.Entidades.Proveedores", b =>
                {
                    b.Property<int>("Proveedor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proveedor_ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Proveedor_ID");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Shared.Entidades.Turnos", b =>
                {
                    b.Property<int>("Turno_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Turno_ID"));

                    b.Property<int>("Admin_ID")
                        .HasColumnType("int");

                    b.Property<int?>("AdministradorAdmin_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cancha_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CanchasCancha_ID")
                        .HasColumnType("int");

                    b.Property<int>("Consumicion_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Consumicion_ID1")
                        .HasColumnType("int");

                    b.Property<int?>("Ejemplo_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Turno_ID");

                    b.HasIndex("AdministradorAdmin_ID");

                    b.HasIndex("CanchasCancha_ID");

                    b.HasIndex("Consumicion_ID1");

                    b.HasIndex("Ejemplo_ID");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.HasOne("Shared.Entidades.Deportes", "Deporte")
                        .WithMany("Canchas")
                        .HasForeignKey("Deporte_ID");

                    b.Navigation("Deporte");
                });

            modelBuilder.Entity("Shared.Entidades.Consumiciones", b =>
                {
                    b.HasOne("Shared.Entidades.Productos", "Producto")
                        .WithMany("Consumiciones")
                        .HasForeignKey("Producto_ID");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Shared.Entidades.Elementos", b =>
                {
                    b.HasOne("Shared.Entidades.Canchas", "Canchas")
                        .WithMany("Elementos")
                        .HasForeignKey("CanchasCancha_ID");

                    b.Navigation("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.HasOne("Shared.Entidades.Proveedores", "Proveedores")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedoresProveedor_ID");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Shared.Entidades.Turnos", b =>
                {
                    b.HasOne("Shared.Entidades.Administrador", "Administrador")
                        .WithMany("Turnos")
                        .HasForeignKey("AdministradorAdmin_ID");

                    b.HasOne("Shared.Entidades.Canchas", "Canchas")
                        .WithMany("Turnos")
                        .HasForeignKey("CanchasCancha_ID");

                    b.HasOne("Shared.Entidades.Consumiciones", "Consumicion")
                        .WithMany()
                        .HasForeignKey("Consumicion_ID1");

                    b.HasOne("Shared.Entidades.Ejemplo", null)
                        .WithMany("Turnos")
                        .HasForeignKey("Ejemplo_ID");

                    b.Navigation("Administrador");

                    b.Navigation("Canchas");

                    b.Navigation("Consumicion");
                });

            modelBuilder.Entity("Shared.Entidades.Administrador", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.Navigation("Elementos");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Deportes", b =>
                {
                    b.Navigation("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Ejemplo", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.Navigation("Consumiciones");
                });

            modelBuilder.Entity("Shared.Entidades.Proveedores", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
